#!/usr/bin/env bash

trap "exit 1" ERR

PONY_VERSION=0.21.3

PROJECT=${PWD##*/}

RED='\033[0;31m'
GREEN='\033[0;32m'
DKGRAY='\033[1;30m'
NC='\033[0m'

TARGET=$1

case $TARGET in
linux-amd64)
  TRIPLE=x86_64-pc-linux-gnu
  TARGET_CPU=x86-64
  ;;
linux-arm64v8)
  TRIPLE=aarch64-unknown-linux-gnu
  # Run `llc -march=aarch64 -mattr=help` to obtain a list of supported CPUs for arm64v8.
  TARGET_CPU=generic
  ;;
windows-amd64)
  TRIPLE=x86_64-pc-windows-msvc
  TARGET_CPU=x86-64
  ;;
*)
  echo -e "${RED}Please provide target platform: 'linux-amd64', 'linux-arm64v8' or 'windows-amd64'.${NC}"
  exit 1
esac

# Consume the target argument so that we can pull the rest of the arguments
# and pass them through to ponyc (see "$@" below).
shift

echo -e "${DKGRAY}Triple set to ${GREEN}${TRIPLE}${NC}"
echo -e "${DKGRAY}Target CPU set to ${GREEN}${TARGET_CPU}${NC}"

# Fetch package dependencies.
if [ -f ./bundle.json ]; then
  echo -e "${DKGRAY}Fetching package dependencies...${NC}"
  stable fetch
fi

# Generate LLVM bitcode file.
echo -e "${DKGRAY}Compiling pony to LLVM bitcode...${NC}"

if [ -f ./bundle.json ]; then
  stable env ponyc --triple=${TRIPLE} --cpu=${TARGET_CPU} -r=bitcode "$@"
else
  ponyc --triple=${TRIPLE} --cpu=${TARGET_CPU} -r=bitcode "$@"
fi

# Compile bitcode to object code.
echo -e "${DKGRAY}Compiling bitcode to object code...${NC}"
llc-6.0 -mtriple ${TRIPLE} ${PROJECT}.bc -filetype obj

# Link it all.

# Prepare the list of extra libraries.
# Convert "lib1 lib2 lib3" to array (lib1 lib2 lib3).
# Later on, the array will be converted to linker command options -llib1 -llib2 -llib3.
IFS=' ' read -r -a EXTRA_LIBS_ARRAY <<< "$EXTRA_LIBS"

case $TARGET in

#---------------------------------------------------------------------------------------------
linux-amd64)

echo -e "${DKGRAY}Linking executable => ${GREEN}./${PROJECT}-linux-amd64${NC}"

clang-6.0 \
  -o ./${PROJECT}-linux-amd64 \
  -O3 \
  --target=${TRIPLE} \
  -mcx16 \
  -fuse-ld=lld \
  ./${PROJECT}.o \
  -L"/usr/local/lib/pony/${PONY_VERSION}/bin" -Wl,-rpath,"/usr/local/lib/pony/${PONY_VERSION}/bin" \
  -L"/usr/local/lib/pony/${PONY_VERSION}/lib" -Wl,-rpath,"/usr/local/lib/pony/${PONY_VERSION}/lib" \
  -L"/usr/local/lib/pony/${PONY_VERSION}/packages" -Wl,-rpath,"/usr/local/lib/pony/${PONY_VERSION}/packages" \
  -L"/usr/local/lib" -Wl,-rpath,"/usr/local/lib" \
  -L"/usr/local/lib/extra/linux-amd64" -Wl,-rpath,"/usr/local/lib/extra/linux-amd64" \
  -Wl,--start-group \
  -lrt \
  -lcrypto \
  -lpcre2-8 \
  -lssl \
  -latomic \
  -Wl,--end-group \
  -lpthread \
  -lponyrt \
  -ldl \
  -lm \
  "${EXTRA_LIBS_ARRAY[@]/#/-l}" \
  -Wl,--export-dynamic-symbol=__PonyDescTablePtr \
  -Wl,--export-dynamic-symbol=__PonyDescTableSize
  ;;

#---------------------------------------------------------------------------------------------
linux-arm64v8)

echo -e "${DKGRAY}Linking executable => ${GREEN}./${PROJECT}-linux-arm64v8${NC}"

clang-6.0 \
  -o ./${PROJECT}-linux-arm64v8 \
  -O3 \
  --target=${TRIPLE} \
  --sysroot=/opt/aarch64-linux-gnu \
  -mcx16 \
  -fuse-ld=lld \
  ./${PROJECT}.o \
  -L"/opt/aarch64-linux-gnu/usr/lib/aarch64-linux-gnu/" -Wl,-rpath-link,"/opt/aarch64-linux-gnu/usr/lib/aarch64-linux-gnu/" \
  -L"/opt/aarch64-linux-gnu/usr/local/lib/pony/${PONY_VERSION}/bin/" -Wl,-rpath-link,"/opt/aarch64-linux-gnu/usr/local/lib/pony/${PONY_VERSION}/bin/" \
  -L"/opt/aarch64-linux-gnu/usr/local/lib/pony/${PONY_VERSION}/lib/" -Wl,-rpath-link,"/opt/aarch64-linux-gnu/usr/local/lib/pony/${PONY_VERSION}/lib/" \
  -L"/opt/aarch64-linux-gnu/usr/local/lib/pony/${PONY_VERSION}/packages/" -Wl,-rpath-link,"/opt/aarch64-linux-gnu/usr/local/lib/pony/${PONY_VERSION}/packages/" \
  -L"/opt/aarch64-linux-gnu/usr/local/lib/extra/linux-arm64v8/" -Wl,-rpath-link,"/opt/aarch64-linux-gnu/usr/local/lib/extra/linux-arm64v8/" \
  -lrt \
  -lcrypto \
  -lpcre2-8 \
  -lssl \
  -latomic \
  -lpthread \
  -lponyrt \
  -ldl \
  -lm \
  -Wl,--export-dynamic-symbol=__PonyDescTablePtr \
  -Wl,--export-dynamic-symbol=__PonyDescTableSize
  ;;

#---------------------------------------------------------------------------------------------
windows-amd64)

echo -e "${DKGRAY}Linking executable => ${GREEN}./${PROJECT}-windows-amd64.exe${NC}"

clang-6.0 \
  -o ./${PROJECT}-windows-amd64.exe \
  -O3 \
  -w \
  --target=${TRIPLE} \
  -mcx16 \
  -fuse-ld=lld \
  -Wl,-debug \
  -Wl,-ignore:4099 \
  -Wl,-machine:X64 \
  ./${PROJECT}.obj \
  -L"/usr/local/lib/windows-amd64/ucrt/" \
  -L"/usr/local/lib/windows-amd64/um/" \
  -L"/usr/local/lib/windows-amd64/msvc/" \
  -L"/usr/local/lib/windows-amd64/ponyc/" \
  -L"/usr/local/lib/extra/windows-amd64/" \
  -lcrypto \
  -lpcre2-8 \
  -lssl \
  -lkernel32 \
  -lmsvcrt \
  -lws2_32 \
  -ladvapi32 \
  -lvcruntime \
  -llegacy_stdio_definitions \
  -ldbghelp \
  -lucrt \
  -llibponyrt \
  "${EXTRA_LIBS_ARRAY[@]/#/-l}"
  ;;

esac

echo -e "${GREEN}Done${NC}"
